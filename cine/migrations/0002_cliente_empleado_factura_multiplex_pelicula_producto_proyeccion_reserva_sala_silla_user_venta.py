# Generated by Django 3.0.4 on 2020-04-06 16:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('cine', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ced_empleado', models.IntegerField()),
                ('nom_empleado', models.CharField(max_length=30)),
                ('tipo_empleado', models.CharField(choices=[('T', 'TIQUETES'), ('S', 'SNACKS')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Multiplex',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('numero_salas', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Pelicula',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nom_pelicula', models.CharField(max_length=30)),
                ('duracion_pelicula', models.CharField(max_length=30)),
                ('clasificacion', models.CharField(choices=[('AA', 'PUBLICO INFANTIL'), ('A', 'TODO PUBLICO'), ('B', 'ADOLESCENTES DE 12'), ('B15', 'ADOLESCENTES DE 15'), ('C', 'ADULTOS 18 AÃ‘OS'), ('D', 'ADULTOS')], max_length=3)),
                ('imagen_pelicula', models.ImageField(upload_to='media')),
                ('trailer', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('cod_reserva', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('fecha_reserva', models.DateTimeField()),
                ('cod_vendedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('cant_sillas', models.IntegerField()),
                ('estado_sala', models.CharField(choices=[('HA', 'HABILITADA'), ('IN', 'INHABILITADA')], max_length=3)),
                ('cod_multi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Multiplex')),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cant_producto', models.IntegerField()),
                ('ced_vendedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Silla',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('tipo_silla', models.CharField(choices=[('G', 'GENERAL'), ('P', 'PREFERENCIAL')], max_length=1)),
                ('cod_reserva', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cine.Reserva')),
                ('cod_sala', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Sala')),
            ],
        ),
        migrations.CreateModel(
            name='Proyeccion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('horario', models.DateTimeField()),
                ('cod_pelicula', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cine.Pelicula')),
                ('cod_sala', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cine.Sala')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_unitario', models.DecimalField(decimal_places=3, max_digits=15)),
                ('nom_producto', models.CharField(max_length=20)),
                ('cod_venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Venta')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('cod_factura', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('tipo_factura', models.CharField(choices=[('RE', 'RESERVA'), ('PR', 'PRODUCTO')], max_length=2)),
                ('val_factura', models.DecimalField(decimal_places=3, max_digits=15)),
                ('descripcion', models.CharField(max_length=50)),
                ('ced_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Cliente')),
                ('ced_vendedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cine.Empleado')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ced', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
